# Handle aggregation layer using cluster ca
args:
  - --kubelet-preferred-address-types=InternalIP
  - --kubelet-use-node-status-port
  - --metric-resolution=15s
  - --kubelet-certificate-authority=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
  - --requestheader-client-ca-file=/etc/certs/proxy-ca.crt
  - --requestheader-username-headers=X-Remote-User
  - --requestheader-group-headers=X-Remote-Group
  - --requestheader-extra-headers-prefix=X-Remote-Extra-

# Secret created on mgr using:
# kubectl create secret generic proxy-ca-secret   --from-file=proxy-ca.crt=/everything/net/ansible/roles/k8s/ca/proxy-ca.crt   -n kube-system

# Mount the proxy CA
extraVolumes:
  - name: proxy-ca
    secret:
      secretName: proxy-ca-secret

extraVolumeMounts:
  - name: proxy-ca
    mountPath: /etc/certs
    readOnly: true

# Additional security bypasses for bare-metal
securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000
  capabilities:
    drop:
      - ALL

# Resource limits for your environment
resources:
  requests:
    cpu: 100m
    memory: 200Mi
  limits:
    cpu: 200m
    memory: 400Mi

# Ensure it runs (even on control plane if needed)
nodeSelector: {}
tolerations: []
